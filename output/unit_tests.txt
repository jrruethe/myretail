# This file is the result of running "rake test"

[32mjson_mixin 0.1.0 built to pkg/json_mixin-0.1.0.gem.[0m
[32mdatabase 0.1.0 built to pkg/database-0.1.0.gem.[0m
USING REAL DATABASE: host.docker.internal
Started with run options --seed 64919

TestProduct
  test:product should have a name.                               [32m PASS[0m (0.00s)
  test:product should have an id.                                [32m PASS[0m (0.00s)
  test:product should ignore extra data.                         [32m PASS[0m (0.00s)
  test:product should output json.                               [32m PASS[0m (0.00s)
  test:product should create from hash.                          [32m PASS[0m (0.00s)
  test:product should be a hash.                                 [32m PASS[0m (0.00s)

TestProductClass
  test:product class should read.                                [32m PASS[0m (0.06s)
  test:product class should create.                              [32m PASS[0m (0.05s)
  test:product class should delete.                              [32m PASS[0m (0.08s)
  test:product class should list.                                [32m PASS[0m (0.05s)
  test:product class should reset.                               [32m PASS[0m (0.05s)
  test:product class should update.                              [32m PASS[0m (0.05s)

TestProductName
  test:product_name should create products.                      [32m PASS[0m (0.09s)
  test:product_name read should 404 on missing products.         [32m PASS[0m (0.01s)
  test:product_name should delete products.                      [32m PASS[0m (0.07s)
  test:product_name read should return existing products.        [32m PASS[0m (0.04s)
  test:product_name should list products.                        [32m PASS[0m (0.04s)
  test:product_name should pass a health check.                  [32m PASS[0m (0.01s)
  test:product_name should update products.                      [32m PASS[0m (0.07s)

Finished in 0.67330s
19 tests, 42 assertions, [32m0 failures, 0 errors, [0m[33m0 skips[0m
Started with run options --seed 48065

TestMyRetail
  test:myretail read should 404 on missing product.              [32m PASS[0m (0.02s)
  test:myretail should update.                                   [32m PASS[0m (0.03s)
  test:myretail read should 200 on existing product.             [32m PASS[0m (0.02s)
  test:myretail should create.                                   [32m PASS[0m (0.02s)
  test:myretail should delete.                                   [32m PASS[0m (0.04s)
  test:myretail should list.                                     [32m PASS[0m (0.03s)

TestClient
  test:client should delete.                                     [32m PASS[0m (0.02s)
  test:client should list.                                       [32m PASS[0m (0.01s)
  test:client read should 404 on missing product.                [32m PASS[0m (0.01s)
  test:client read should 200 on existing product.               [32m PASS[0m (0.01s)
  test:client should create.                                     [32m PASS[0m (0.01s)
  test:client should update.                                     [32m PASS[0m (0.02s)

TestCombine
  test:TestCombine should handle 404/nil.                        [32m PASS[0m (0.00s)
  test:TestCombine should combine list results.                  [32m PASS[0m (0.00s)
  test:TestCombine should combine read results.                  [32m PASS[0m (0.00s)

Finished in 0.25841s
15 tests, 45 assertions, [32m0 failures, 0 errors, [0m[33m0 skips[0m
USING REAL DATABASE: host.docker.internal
Started with run options --seed 64752

TestProduct
  test:product should be a hash.                                 [32m PASS[0m (0.00s)
  test:product should have a currency.                           [32m PASS[0m (0.00s)
  test:product should create from hash.                          [32m PASS[0m (0.00s)
  test:product should ignore extra data.                         [32m PASS[0m (0.00s)
  test:product should output json.                               [32m PASS[0m (0.00s)
  test:product should have an id.                                [32m PASS[0m (0.00s)
  test:product should have a price.                              [32m PASS[0m (0.00s)

TestProductClass
  test:product class should create.                              [32m PASS[0m (0.07s)
  test:product class should delete.                              [32m PASS[0m (0.05s)
  test:product class should reset.                               [32m PASS[0m (0.05s)
  test:product class should list.                                [32m PASS[0m (0.05s)
  test:product class should read.                                [32m PASS[0m (0.05s)
  test:product class should update.                              [32m PASS[0m (0.05s)

TestProductPrice
  test:product_price should list products.                       [32m PASS[0m (0.07s)
  test:product_price read should 404 on missing products.        [32m PASS[0m (0.01s)
  test:product_price should create products.                     [32m PASS[0m (0.05s)
  test:product_price read should return existing products.       [32m PASS[0m (0.05s)
  test:product_price should update products.                     [32m PASS[0m (0.06s)
  test:product_price should delete products.                     [32m PASS[0m (0.04s)
  test:product_price should pass a health check.                 [32m PASS[0m (0.00s)

Finished in 0.60462s
20 tests, 44 assertions, [32m0 failures, 0 errors, [0m[33m0 skips[0m
Started with run options --seed 9317

TestJsonMixin
  test:json_mixin should be equal.                               [32m PASS[0m (0.00s)
  test:json_mixin should only pull out getters.                  [32m PASS[0m (0.00s)
  test:json_mixin should be convertable to json.                 [32m PASS[0m (0.00s)
  test:json_mixin should be pretty-printable.                    [32m PASS[0m (0.00s)
  test:json_mixin should be uniq-able.                           [32m PASS[0m (0.00s)
  test:json_mixin should be comparable.                          [32m PASS[0m (0.00s)

Finished in 0.00253s
6 tests, 12 assertions, [32m0 failures, 0 errors, [0m[33m0 skips[0m
Started with run options --seed 35775

TestRealDatabase
  test:query should subset filter.                               [32m PASS[0m (0.07s)
  test:update should insert a document into the database.        [32m PASS[0m (0.04s)
  test:query should list all documents.                          [32m PASS[0m (0.03s)
  test:query should unique filter.                               [32m PASS[0m (0.04s)
  test:insert should insert a document into the database.        [32m PASS[0m (0.03s)
  test:query should list duplicate documents.                    [32m PASS[0m (0.04s)
  test:delete should delete a document from the database.        [32m PASS[0m (0.07s)
  test:query should return an empty list.                        [32m PASS[0m (0.02s)
  test:update should update a document in the database.          [32m PASS[0m (0.06s)

TestTransform
  test:tranform should symbolize keys.                           [32m PASS[0m (0.00s)

TestMockDatabase
  test:delete should delete a document from the database.        [32m PASS[0m (0.00s)
  test:query should list all documents.                          [32m PASS[0m (0.00s)
  test:query should return an empty list.                        [32m PASS[0m (0.00s)
  test:update should insert a document into the database.        [32m PASS[0m (0.00s)
  test:query should subset filter.                               [32m PASS[0m (0.00s)
  test:query should unique filter.                               [32m PASS[0m (0.00s)
  test:update should update a document in the database.          [32m PASS[0m (0.00s)
  test:insert should insert a document into the database.        [32m PASS[0m (0.00s)
  test:query should list duplicate documents.                    [32m PASS[0m (0.00s)

Finished in 0.41226s
19 tests, 75 assertions, [32m0 failures, 0 errors, [0m[33m0 skips[0m
